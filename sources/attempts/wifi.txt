#include <SoftwareSerial.h> 
#define BT_RXD 10
#define BT_TXD 9 
SoftwareSerial esp(BT_RXD, BT_TXD); 

#define SSID    "A90"
#define PASS    "20000212"
#define IP      "3.35.136.46"
#define PORT    51881

#define id      "leeeungi"
#define secret  "leeubin"

void setup() { 
  unsigned int i = 0;
  Serial.begin(9600); 
  esp.begin(9600); 
  esp.setTimeout(10000);

  esp.println("AT");
  if(esp.find("OK"))
    Serial.print("ESP8266 is alive\n");
  else {
    Serial.print("Module have no response\r\n");
    while(1);
  }
  
  esp.println("AT+RST");
  if(esp.find("Ready"))
    Serial.print("Reset is done\n");
  else {
    Serial.print("Reset failed\r\n");
    while(1);
  }

  while(1){
    esp.println("AT+CWMODE=1");
    if(!esp.find("FAIL")) {
      Serial.print("Station mode done\n");
      break;
    }
    else {
      Serial.print("Station mode failed\r\n");
    }
  }

  esp.println("AT+CWQAP");

  boolean connected = false;
  for(int i = 0; i < 5; i++) {
    if(connectWiFi()) {
      connected = true;
      break;
    }
  }

  if(!connected) {while(1);}
  delay(2000);

  esp.println("AT+CIFSR");
  while(1) {
    if(esp.available()) 
      Serial.write(esp.read());
    if(i++ > 4000) break;
  }

  esp.println("AT+CIPMUX=0");
  Serial.println("\r\nsingle connection mode\r\n");
} 

void loop() { 
  String cmd = "AT+CIPSTART=\"TCP\",\"";
  cmd += IP;
  cmd += "\",";
  cmd += PORT;
  esp.println(cmd);
  Serial.println(cmd);

  if(esp.find("Error")) return;

  //char rain = '1';

  cmd = "POST /sync HTTP/1.1\r\nid:";
  cmd += id;
  cmd += "\r\nsecret:";
  cmd += secret;
  //cmd += "\r\nrain:";
  //cmd += rain;
  cmd += "\r\n\r\n";
  //cmd = "GET / HTTP/1.1\r\n\r\n";
  
  esp.print("AT+CIPSEND=");
  esp.println(cmd.length());
  Serial.print("AT+CIPSEND=");
  Serial.println(cmd.length());

  if(esp.find(">")) {
    Serial.print(">");
  } else {
    esp.println("AT+CIPCLOSE");
    Serial.println("connection timeout");
    delay(1000);
    return;
  }

  esp.print(cmd);
  Serial.print(cmd);

  unsigned int i = 0;
  char ch = NULL;
  boolean flag = false;
  while(i < 60000) {
    i++;
    if(esp.available()){
      int buff = esp.read();
      Serial.write(buff);
      if(flag) {
        ch = (char)(buff);
        flag = false;
      }
      if((char)(buff) == '*') {
        flag = true;
      }
    }
  }
  //Serial.println("[출력]");
  //Serial.println((String)ch == NULL ? "통신 오류" : (String)ch);
  delay(10000);
}

boolean connectWiFi() {
  String cmd = "AT+CWJAP=\"";
  cmd += SSID;
  cmd += "\",\"";
  cmd += PASS;
  cmd += "\"";

  Serial.println(cmd);
  esp.println(cmd);

  if(esp.find("OK")) {
    Serial.println("OK, Connected to WiFi");
    return true;
  } else {
    Serial.println("Can not connect to the WiFi");
    return false;
  }
}